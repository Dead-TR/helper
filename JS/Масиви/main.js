var array= ["ss","aa","11","666","DTR","Pandemic", "s", "b",];
var numbers=[1, 5, 0, 33,3, 16, 99, 3, -14, 3, 50];

//M - метод модифікує масив
//N - метод не модифікує масив

array.forEach( function(element, index, array) {
  console.log("array - Виводить увесь масив: ", array);
  console.log("index - Показує номер обраного елементу-[i]: ", index);
  console.log("element - Показує сам елемент: ", element);


  //По суті, це короткий запис цикла, створений для того, щоб не генерувати цикл
});	//										--	N



console.log("------------------------map---------------------------------");


console.log(array.map(function(index, elem) {
    console.log("index", index);
    console.log("elem", elem);
}));	//									--	N


console.log("--------------------------filter-------------------------------");

var ftr = array.filter(function(index) {  //Фільтр
  return index.indexOf('a') === -1; //-1 -- не показувати, 0 -- знайти першу, 1 -- другу
});	//										--	N


console.log("ftr", ftr);

console.log("------------------------every---------------------------------");


console.log(array.every(function(e){return e.length > 1})); 
  //Виводить T, якщо в масиві немає елементів, довжина яких 1;
  //і F -- якщо такі елементи існують
  //											--	N

console.log("---------------------------some------------------------------");


console.log(array.some(function(e){return e.indexOf('R')}));
  //Виводить Т, якщо десь в масиві є буква R
  //											--	N

console.log("----------------------------reduce---Перебирання масиву--------------------------");

var reduce_ = numbers.reduce(function(a, b){  //reduceRigt -- зворотній

  console.log("---b", b);
  console.log("----a", a);
  console.log("a+b", a+b);

  console.log("----------------------");
  return a+b;//а--проміжний елемент масиву, b--дійсний елемент масиву
}, 0)          //Всього елементів може бути, до чотирьох
//0 -- initialValue --- коли запускається колбек, Initial стає першим елементом внутрішнього масиву
// Під час решти запускав, на місце Initial буде ставати результат виконання функції (return)

console.log(reduce_);

//												--	N

console.log("-------------------------indexOf--------------------------------");

console.log(numbers.indexOf(3));
console.log(numbers.lastIndexOf(3));
//--------------------------------------------------------------------------------


//find
//findIndex
//




//Методи міняють вихідний масив:

let a = [1, 2];

  console.log("push - додати елемент в масив");
a.push(3, 4, 'G');  //a = [1, 2, 3, 4, 'G']		--	M

  console.log("pop - видаляє останній елемент");
a.pop();  //a = [1]								--	M


  console.log("unshift - додає елемент на початок");
a.unshift('a', 0) //a=['a', 0, 1, 2]			--	M

  console.log("shift - видаляє перший елемент");
a.shift() //a=[2]								--	M


a.splice(Починаючи з індекса, видаляємо стільки елементів, й замінюємо їх іншими);
//a.splice(1, 1, 'X') a = [1, 'X']
	//											--	M

  console.log("reverse - розвернути елементи масиву");
a.reverse();  //а = [2, 1]						--	M


a.sort((a, b) => {return a-b}); //сортує масиву
				//return a.localeCompare(b) -- метод сортування за алфавітом
//(a, b) переставляє числа, якщо умова правдива:
//		***можна, також, юзати знаки >, <, /, *,
//>0 якщо a>b 		a переставить вправо
//=0 якщо a===b 	не рухатиме
//<0 якщо a<b 		a переставить вліво
	           //											--	M
/*  Сорт за іменем, на прикладі об'єкта:

  return subjects.sort((a, b) => {
    let aName = a.name.toLowerCase();
    let bName = b.name.toLowerCase();

    if (aName > bName) {return 1}
    if (aName < bName) {return -1}
    return 0;
  })

*/


  console.log("fill - Перезаповнити масив");
a.fill('X', 1, 5); //a = [1, 'X', 'X', 'X', undefined] З якого індекса, й по який
	//											--	M


//----------------- Не модифікують масив:


b = a.join('-'); // зливають елементи масива, у стрічку, з роздільником
// b = '1-2';									--	N

b = a.slice(start, end); // створити копію масиву, з елементів, починаючи з індекса
					//	start, й закінчуючи індексом end (приймає негативні аргументи)
//b = a.slice(); b = [1, 2] (копіює масив повністю)
//												--	N

b = a.concat([3, 4], [5, 6], 7, 8); // поєднує масиви, в один
b = [ ...a, ...[3, 4], ...[5, 6], 7, 8]; // Мусить працювати так само, як і concat
b= [ a, [[3]4]].flat(3) //витягуватиме до вказаного числа (тут 3) вкладеностей
//b = [1, 2, 3, 4, 5, 6, 7, 8]
//b = a.concat(); b = [1, 2] (копіює масив повністю)
//												--	N


console.log("--------------set----------------------------------");
	//видалити повторення масиву:
b = [ ...new Set([1, 1, 3])];
//b = [3]
